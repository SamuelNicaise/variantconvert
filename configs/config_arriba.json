{
	"GENERAL": {
		"origin": "arriba",
		"skip_rows": 0,
		"comment": "",
		"unique_variant_id": [
			"#gene1",
			"gene2",
			"breakpoint1",
			"breakpoint2"
		],
		"default_genotype": "0/1"
	},
	"GENOME": {
		"assembly": "hg19",
		"path": "L:\\Archives\\NGS\\BAS\\DOCKER_STARK_MAIN_FOLDER\\databases\\genomes\\20201109-144006\\hg19.fa",
		"vcf_header": [
			"##contig=<ID=chr1,length=249250621,assembly=hg19>",
			"##contig=<ID=chr2,length=243199373,assembly=hg19>",
			"##contig=<ID=chr3,length=198022430,assembly=hg19>",
			"##contig=<ID=chr4,length=191154276,assembly=hg19>",
			"##contig=<ID=chr5,length=180915260,assembly=hg19>",
			"##contig=<ID=chr6,length=171115067,assembly=hg19>",
			"##contig=<ID=chr7,length=159138663,assembly=hg19>",
			"##contig=<ID=chr8,length=146364022,assembly=hg19>",
			"##contig=<ID=chr9,length=141213431,assembly=hg19>",
			"##contig=<ID=chr10,length=135534747,assembly=hg19>",
			"##contig=<ID=chr11,length=135006516,assembly=hg19>",
			"##contig=<ID=chr12,length=133851895,assembly=hg19>",
			"##contig=<ID=chr13,length=115169878,assembly=hg19>",
			"##contig=<ID=chr14,length=107349540,assembly=hg19>",
			"##contig=<ID=chr15,length=102531392,assembly=hg19>",
			"##contig=<ID=chr16,length=90354753,assembly=hg19>",
			"##contig=<ID=chr17,length=81195210,assembly=hg19>",
			"##contig=<ID=chr18,length=78077248,assembly=hg19>",
			"##contig=<ID=chr19,length=59128983,assembly=hg19>",
			"##contig=<ID=chr20,length=63025520,assembly=hg19>",
			"##contig=<ID=chr21,length=48129895,assembly=hg19>",
			"##contig=<ID=chr22,length=51304566,assembly=hg19>",
			"##contig=<ID=chrM,length=16571,assembly=hg19>",
			"##contig=<ID=chrX,length=155270560,assembly=hg19>",
			"##contig=<ID=chrY,length=59373566,assembly=hg19>",
			"##reference=file:///STARK/databases/genomes/current/hg19.fa"
		]
	},
	"VCF_COLUMNS": {
		"#CHROM": [
			"HELPER_FUNCTION",
			"get_chr_from_breakpoint",
			"breakpoint1",
			"breakpoint2"
		],
		"POS": [
			"HELPER_FUNCTION",
			"get_pos_from_breakpoint",
			"breakpoint1",
			"breakpoint2"
		],
		"ID": "",
		"REF": [
			"HELPER_FUNCTION",
			"get_ref_from_breakpoint",
			"breakpoint1",
			"breakpoint2"
		],
		"ALT": [
			"HELPER_FUNCTION",
			"get_alt_from_arriba_breakpoint",
			"breakpoint1",
			"breakpoint2",
			"direction1",
			"direction2"
		],
		"QUAL": "",
		"FILTER": "",
		"INFO": {
			"Fusion_Gene1": "#gene1",
			"Fusion_Gene2": "gene2",
			"Fusion_Site1": "site1",
			"Fusion_Site2": "site2",
			"Fusion_Type": "type",
			"Split_Reads1": "split_reads1",
			"Split_Reads2": "split_reads2",
			"DiscordantReadPairs": "discordant_mates",
			"Fusion_Coverage1": "coverage1",
			"Fusion_Coverage2": "coverage2",
			"Fusion_Confidence": "confidence",
			"Reading_Frame": "reading_frame",
			"Arriba_tags": "tags",
			"Retained_Protein_Domains": "retained_protein_domains",
			"Closest_Genomic_Breakpoint1": "closest_genomic_breakpoint1",
			"Closest_Genomic_Breakpoint2": "closest_genomic_breakpoint2",
			"Fusion_Gene_ID1": "gene_id1",
			"Fusion_Gene_ID2": "gene_id2",
			"Arriba_Transcript_ID1": "transcript_id1",
			"Arriba_Transcript_ID2": "transcript_id1",
			"Fusion_Direction1": "direction1",
			"Fusion_Direction2": "direction2",
			"Arriba_Filters": "filters"
		},
		"FORMAT": {
			"GT": ""
		},
		"SAMPLE": ""
	},
	"COLUMNS_DESCRIPTION": {
		"INFO": {
			"Fusion_Gene1": {
				"Type": "String",
				"Description": "Fusion gene 1"
			},
			"Fusion_Gene2": {
				"Type": "String",
				"Description": "Fusion gene 2"
			},
			"Fusion_Site1": {
				"Type": "String",
				"Description": "information about the location of breakpoint 1. Possible values are: 5' UTR, 3' UTR, UTR (overlapping with a 5' UTR as well as a 3' UTR), CDS (coding sequence), exon, intron, and intergenic. The keyword exon is used for non-coding genes or for ambiguous situations where the breakpoint overlaps with both a coding exon and a UTR. If the breakpoint coincides with an exon boundary, the additional keyword splice-site is appended."
			},
			"Fusion_Site2": {
				"Type": "String",
				"Description": "information about the location of breakpoint 2. Possible values are: 5' UTR, 3' UTR, UTR (overlapping with a 5' UTR as well as a 3' UTR), CDS (coding sequence), exon, intron, and intergenic. The keyword exon is used for non-coding genes or for ambiguous situations where the breakpoint overlaps with both a coding exon and a UTR. If the breakpoint coincides with an exon boundary, the additional keyword splice-site is appended."
			},
			"Fusion_Type": {
				"Type": "String",
				"Description": "Based on the orientation of the supporting reads and the coordinates of breakpoints, the type of event can be inferred. Possible values are: translocation (between different chromosomes), duplication, inversion, and deletion. If genes are fused head-to-head or tail-to-tail, this is indicated as 5'-5' or 3'-3' respectively. Genes fused in such an orientation cannot yield a chimeric protein, since one of the genes is transcribed from the wrong strand. This type of event is equivalent to the truncation of the genes. The following types of events are flagged with an extra keyword, because they are frequent types of false positives and/or it is not clear if they are somatic or germline variants: Deletions with a size in the range of introns (<400kb) are flagged as read-through, because there is a high chance that the fusion arises from read-through transcription rather than an underlying genomic deletion. Intragenic duplications with both breakpoints at splice-sites are flagged as non-canonical-splicing, because the supporting reads might originate from circular RNAs, which are very abundant even in normal tissue, but manifest as duplications in RNA-Seq data. Internal tandem duplications are flagged as ITD. It is not always clear whether the ITDs observable in RNA-Seq data are somatic or germline variants, because ITDs are abundant in the germline and germline variants cannot be filtered effectively due to lack of a normal control."
			},
			"Split_Reads1": {
				"Type": "Integer",
				"Description": "Total split reads supporting the fusion on breakpoint 1"
			},
			"Split_Reads2": {
				"Type": "Integer",
				"Description": "Total split reads supporting the fusion on breakpoint 2"
			},
			"DiscordantReadPairs": {
				"Type": "Integer",
				"Description": "Total discordant read pairs supporting the fusion"
			},
			"Fusion_Coverage1": {
				"Type": "Integer",
				"Description": "Total discordant read pairs supporting the fusion"
			},
			"Fusion_Coverage2": {
				"Type": "Integer",
				"Description": "Total discordant read pairs supporting the fusion"
			},
			"Fusion_Confidence": {
				"Type": "String",
				"Description": "Each Arriba prediction is assigned one of the confidences 'low', 'medium', or 'high'. Several characteristics are taken into account, including: the number of supporting reads, the balance of split reads and discordant mates, the distance between the breakpoints, the type of event, whether the breakpoints are intragenic or not, and whether there are other events which corroborate the prediction, e.g. multiple isoforms or balanced translocations."
			},
			"Reading_Frame": {
				"Type": "String",
				"Description": "States whether the gene at the 3' end of the fusion is fused in-frame or out-of-frame. 'stop-codon' indicates that there is a stop codon prior to the fusion junction, such that the 3' end is not translated, even if the reading frame is preserved across the junction. The prediction of the reading frame builds on the prediction of the peptide sequence. A dot (.) indicates that the peptide sequence cannot be predicted"
			},
			"Arriba_tags": {
				"Type": "String",
				"Description": "User-defined list of tags provided to Arriba via the parameter -t, this column is populated with the provided tag whenever a fusion matches the coordinates specified for the respective tag"
			},
			"Retained_Protein_Domains": {
				"Type": "String",
				"Description": " If Arriba is provided with protein domain annotation using the parameter -p, then this column is populated with protein domains retained in the fusion. Redundant protein domains are only listed once. After every domain the fraction that is retained is stated as a percentage value in parentheses. The protein domains of the 5' and 3' genes are separated by a pipe symbol (|)."
			},
			"Closest_Genomic_Breakpoint1": {
				"Type": "String",
				"Description": " If Arriba is provided with protein domain annotation using the parameter -p, then this column is populated with protein domains retained in the fusion. Redundant protein domains are only listed once. After every domain the fraction that is retained is stated as a percentage value in parentheses. The protein domains of the 5' and 3' genes are separated by a pipe symbol (|)."
			},
			"Closest_Genomic_Breakpoint2": {
				"Type": "String",
				"Description": " If Arriba is provided with protein domain annotation using the parameter -p, then this column is populated with protein domains retained in the fusion. Redundant protein domains are only listed once. After every domain the fraction that is retained is stated as a percentage value in parentheses. The protein domains of the 5' and 3' genes are separated by a pipe symbol (|)."
			},
			"Fusion_Gene_ID1": {
				"Type": "String",
				"Description": " If Arriba is provided with protein domain annotation using the parameter -p, then this column is populated with protein domains retained in the fusion. Redundant protein domains are only listed once. After every domain the fraction that is retained is stated as a percentage value in parentheses. The protein domains of the 5' and 3' genes are separated by a pipe symbol (|)."
			},
			"Fusion_Gene_ID2": {
				"Type": "String",
				"Description": " If Arriba is provided with protein domain annotation using the parameter -p, then this column is populated with protein domains retained in the fusion. Redundant protein domains are only listed once. After every domain the fraction that is retained is stated as a percentage value in parentheses. The protein domains of the 5' and 3' genes are separated by a pipe symbol (|)."
			},
			"Arriba_Transcript_ID1": {
				"Type": "String",
				"Description": " If Arriba is provided with protein domain annotation using the parameter -p, then this column is populated with protein domains retained in the fusion. Redundant protein domains are only listed once. After every domain the fraction that is retained is stated as a percentage value in parentheses. The protein domains of the 5' and 3' genes are separated by a pipe symbol (|)."
			},
			"Arriba_Transcript_ID2": {
				"Type": "String",
				"Description": " If Arriba is provided with protein domain annotation using the parameter -p, then this column is populated with protein domains retained in the fusion. Redundant protein domains are only listed once. After every domain the fraction that is retained is stated as a percentage value in parentheses. The protein domains of the 5' and 3' genes are separated by a pipe symbol (|)."
			},
			"Fusion_Direction1": {
				"Type": "String",
				"Description": "Fusion_Direction1 and Fusion_Direction2 indicate the orientation of the fusion. A value of downstream means that the partner is fused downstream of the breakpoint, i.e. at a coordinate higher than the breakpoint. A value of upstream means the partner is fused at a coordinate lower than the breakpoint. When the prediction of the strands or of the 5' gene fails, this information gives insight into which parts of the fused genes are retained in the fusion."
			},
			"Fusion_Direction2": {
				"Type": "String",
				"Description": "Fusion_Direction1 and Fusion_Direction2 indicate the orientation of the fusion. A value of downstream means that the partner is fused downstream of the breakpoint, i.e. at a coordinate higher than the breakpoint. A value of upstream means the partner is fused at a coordinate lower than the breakpoint. When the prediction of the strands or of the 5' gene fails, this information gives insight into which parts of the fused genes are retained in the fusion."
			},
			"Arriba_Filters": {
				"Type": "String",
				"Description": "Lists the filters which removed one or more of the supporting reads. https://arriba.readthedocs.io/en/latest/internal-algorithm/ describes all filters in detail. The number of filtered reads is given in parentheses after the name of the filter. The total number of supporting reads can be obtained by summing up the reads given in the columns split_reads1, split_reads2, discordant_mates, and filters. If a filter discarded the event as a whole (all reads), the number of filtered reads is not stated."
			}
		},
		"FORMAT": {
			"GT": {
				"Type": "String",
				"Description": "Genotype"
			}
		}
	}
}